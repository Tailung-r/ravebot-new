
import disnake
from disnake.ext import commands
import os
import asyncio

intents = disnake.Intents.all()
bot = commands.Bot(command_prefix='!', reload=True, intents=intents,
                   activity=disnake.Activity(name="—Å—Ç—Ä–∏–º Hotaru", type=disnake.ActivityType.watching))
CATEGORY_ID = 1300570620861485086

user_tickets = {}
ticket_owners = {}
ticket_number = 1

@bot.command(name= '–ø—Ä–∏–º–µ—Ä')
async def meow(ctx):
    embed = disnake.Embed(
    description= "–ü—Ä–∏–º–µ—Ä –∑–∞—è–≤–∫–∏ –≤ –∫–ª–∞–Ω",
    title = "–ó–∞—è–≤–∫–∞ –≤ –∫–ª–∞–Ω",
    color=disnake.Color.red()
    )

    embed.add_field(name="–í–∞—à–µ –∏–º—è", value= "–ò–ª—å—è",inline=False)
    embed.add_field(name="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç", value= "16",inline=False)
    embed.add_field(name="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å yooma.su", value= "https://yooma.su/profile/tailung",inline=False)
    embed.add_field(name="–ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª–∏ –∏–º–µ–Ω–Ω–æ –Ω–∞—à –∫–ª–∞–Ω", value= "–ü–æ—Ç–æ–º—É —á—Ç–æ –ö–∞—Ä–∏–Ω–∞ —Å–∏–≥–º–∞",inline=False)
    embed.add_field(name="–ö—Ä–∞—Ç–∫–æ –æ —Å–µ–±–µ", value= "—â–∞–≤–µ–ª—å —Å–Ω–∏—Ç—Å—è, —Å–ø—Å —á—Ç–æ –∫–æ–Ω—á–∏–ª –Ω–∞...",inline=False)
    embed.set_thumbnail(url = "https://i.imgur.com/IzyaxAK.png")
    embed.set_image(url = "https://media.discordapp.net/attachments/1280097880220110852/1291685804560744509/1.gif?ex=67a479a6&is=67a32826&hm=e767346c4a99f8dcb481b8380c85ba753dd0a1947373e7660f8180020a91a2ee&=&width=400&height=209")
    await ctx.send(embed=embed)

@bot.command(name='—é–ª—è')
async def gav(ctx):
    embed = disnake.Embed(
    description= "–Æ–ª—è - —Å—É–∫–∞",
    title = "–°—É–∫–∞",
    color=disnake.Color.red()
    )
    await ctx.send(embed=embed)

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user} (ID: {bot.user.id})")
    print("Bot is ready!")


@bot.command()
async def link(ctx):
    link_message = '[–¢—ã–∫](https://yooma.su/profile/tailung)'
    await ctx.send(link_message)


class AppealModal(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(label='–ò–º—è', style=disnake.TextInputStyle.short, placeholder='–ü—Ä–∏–º–µ—Ä: –ò–ª—å—è',
                                 required=True, custom_id='**1.–ò–º—è**', max_length=100),
            disnake.ui.TextInput(label='–í–æ–∑—Ä–∞—Å—Ç', style=disnake.TextInputStyle.short, placeholder='–ü—Ä–∏–º–µ—Ä: 16',
                                 required=True, custom_id='**2.–í–æ–∑—Ä–∞—Å—Ç**', max_length=2),
            disnake.ui.TextInput(label='–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ yooma.su', style=disnake.TextInputStyle.short,
                                 placeholder='–ü—Ä–∏–º–µ—Ä: https://yooma.su/profile/tailung', required=True,
                                 custom_id='**3.–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ yooma.su**',
                                 max_length=200),
            disnake.ui.TextInput(label='–ü—Ä–∏—á–∏–Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω', style=disnake.TextInputStyle.paragraph,
                                 placeholder='–ü—Ä–∏–º–µ—Ä: –ü–æ—Ç–æ–º—É —á—Ç–æ –ö–∞—Ä–∏–Ω–∞ —Å–∏–≥–º–∞', required=True,
                                 custom_id='**3.–ü—Ä–∏—á–∏–Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω**',
                                 max_length=400),
            disnake.ui.TextInput(label='–ö—Ä–∞—Ç–∫–æ –æ —Å–µ–±–µ', style=disnake.TextInputStyle.paragraph,
                                 placeholder='–ü—Ä–∏–º–µ—Ä: –Ø –ê–¥–µ–∫–≤–∞—Ç–Ω—ã–π, —É–º–Ω—ã–π. –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –∫–ª–∞–Ω—É!', required=True,
                                 custom_id='**4.–ö—Ä–∞—Ç–∫–æ –æ —Å–µ–±–µ**',
                                 max_length=400),
        ]
        super().__init__(title="–ó–∞—è–≤–∫–∞", components=components, custom_id='appeal_modal')

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        await interaction.response.defer(ephemeral=True)

        profile_link = interaction.text_values['**3.–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ yooma.su**']

        embed = disnake.Embed(title="–ó–∞—è–≤–∫–∞", color=disnake.Color.red(),
                              description=f"–ó–∞—è–≤–∫–∞ –æ—Ç {interaction.author.mention}\n –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ [yooma.su]({profile_link})")
        embed.set_thumbnail(url=interaction.author.avatar.url)
        for title, resp in interaction.text_values.items():
            if title != '**3.–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ yooma.su**':
                ilovefootjob = f"\n```{resp}```\n"
                embed.add_field(name=title, value=ilovefootjob, inline=False)


        channel_id = 1297220001173868626
        channel = interaction.bot.get_channel(channel_id) or await interaction.bot.fetch_channel(channel_id)
        message = await channel.send(embed=embed)
        await interaction.edit_original_response('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!')


@bot.slash_command(name='–ø–æ–º–æ—â—å', description='–ü–æ–º–æ—â—å —Å–æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º')
async def info(ctx):
    await ctx.response.defer()
    cl = [
        '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω, –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á—Ç–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞: https://discord.gg/VYE3v5EZ',
        '–ü–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"',
        '–í–∞–º –∑–∞–¥–∞–¥—É—Ç 5 –≤–æ–ø—Ä–æ—Å–æ–≤,—á–µ—Å—Ç–Ω–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–∏—Ö!',
        '–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –Ω–∞–ø–∏—à–µ—Ç, —á—Ç–æ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –≤–∞–º –Ω–∞–ø–∏—à—É—Ç',
    ]
    await ctx.followup.send("\n".join(cl))


@bot.command(name='–∑–∞—è–≤–∫–∞')
async def open_modal(ctx):
    view = disnake.ui.View(timeout=None)
    allowed_channel_id = 1297219838384799754

    if ctx.channel.id != allowed_channel_id:
        await ctx.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.")
        return

    view = disnake.ui.View(timeout=None)

    async def modal_callback(interaction):
        if interaction.component.custom_id == "open_modal":
            modal = AppealModal()
            await interaction.response.send_modal(modal)

    button = disnake.ui.Button(style=disnake.ButtonStyle.red, label="   –ü–æ–¥–∞—Ç—å –ó–∞—è–≤–∫—É", custom_id="open_modal",
                               emoji='üíå')
    button.callback = modal_callback

    view.add_item(button)

    embed = disnake.Embed(
        title="**–ó–∞—è–≤–∫–∞ –≤ –∫–ª–∞–Ω**",
        description="**–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π –∏–≥—Ä–æ–∫.\n–î–ª—è –Ω–∞—á–∞–ª–∞ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∫–ª–∞–Ω–∞.\n–ü–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –∫–ª–∞–Ω!**",
        color=disnake.Color.red()
    )

    await ctx.send(embed=embed, view=view)


@bot.command(name='ticket')
async def ticket(ctx):
    if ctx.channel.id != 1300883170551533678:
        await ctx.send("**–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.**")
        return

    global ticket_number

    embed = disnake.Embed(
        title="**–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π**",
        description="**–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç\n –í –Ω–µ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∏–≥—Ä–æ–∫–∞\n –ó–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å**",
        color=disnake.Color.red()
    )

    ticket_button = disnake.ui.Button(label="–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", style=disnake.ButtonStyle.red, emoji='‚úâÔ∏è')

    async def ticket_callback(interaction):
        global ticket_number

        if interaction.user.id in user_tickets:
            await interaction.response.send_message(
                content="**–£ –≤–∞—Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç —Ç–∏–∫–µ—Ç. –ó–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π.**", ephemeral=True)
            return

        channel_name = f'ticket-{ticket_number}'
        guild = ctx.guild
        category = guild.get_channel(CATEGORY_ID)
        overwrites = {
            guild.default_role: disnake.PermissionOverwrite(read_messages=False),
            interaction.user: disnake.PermissionOverwrite(read_messages=True),
        }

        for role in guild.roles:
            if role.permissions.administrator:
                overwrites[role] = disnake.PermissionOverwrite(read_messages=True)

        ticket_channel = await guild.create_text_channel(channel_name, category=category, overwrites=overwrites)
        user_tickets[interaction.user.id] = ticket_channel.id
        ticket_owners[ticket_channel.id] = interaction.user.id

        await interaction.response.send_message(
            content=f"**{interaction.user.mention}, –≤–∞—à —Ç–∏–∫–µ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –∫–∞–Ω–∞–ª–µ {ticket_channel.mention}!**",
            ephemeral=True)

        close_without_reason_button = disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å", style=disnake.ButtonStyle.danger)
        close_with_reason_button = disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Å –ø—Ä–∏—á–∏–Ω–æ–π", style=disnake.ButtonStyle.danger)
        take_ticket_button = disnake.ui.Button(label="–í–∑—è—Ç—å —Ç–∏–∫–µ—Ç", style=disnake.ButtonStyle.green)

        ticket_taken = False

        async def take_ticket_callback(interaction):
            nonlocal ticket_taken
            if ticket_taken:
                await interaction.response.send_message(content="**–≠—Ç–æ—Ç —Ç–∏–∫–µ—Ç —É–∂–µ –≤–∑—è—Ç –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.**",
                                                        ephemeral=True)
                return

            if not any(role.permissions.administrator for role in interaction.user.roles):
                await interaction.response.send_message(content="**–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –¥–ª—è –≤–∑—è—Ç–∏—è —Ç–∏–∫–µ—Ç–∞.**",
                                                        ephemeral=True)
                return

            ticket_taken = True
            ticket_number_from_channel = ticket_channel.name.split('-')[1]
            new_name = f"{interaction.user.name}-ticket-{ticket_number_from_channel}"
            await ticket_channel.edit(name=new_name)
            await interaction.response.send_message(content=f"**–¢–∏–∫–µ—Ç –±—ã–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤: {new_name}**", ephemeral=True)

        async def close_with_reason_callback(interaction):
            if not any(role.permissions.administrator for role in interaction.user.roles):
                await interaction.response.send_message("**–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ —Å –ø—Ä–∏—á–∏–Ω–æ–π.**",
                                                        ephemeral=True)
                return

            await interaction.response.send_message("**–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞:**", ephemeral=True)

            def check(msg):
                return msg.author == interaction.user and msg.channel == ticket_channel

            try:
                reason_msg = await bot.wait_for('message', check=check, timeout=30)
                reason = reason_msg.content
            except asyncio.TimeoutError:
                reason = "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"

            if ticket_channel.guild.get_channel(ticket_channel.id):
                await ticket_channel.send(f"–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            await ticket_channel.delete()

            owner_id = ticket_owners.pop(ticket_channel.id, None)
            if owner_id:
                user_tickets.pop(owner_id, None)

            user_tickets.pop(interaction.user.id, None)  #
            ticket_taken = False

            if owner_id:
                owner = ctx.guild.get_member(owner_id)
                if owner:
                    embed_message = disnake.Embed(
                        title="**–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç**",
                        description=f"**–ü—Ä–∏—á–∏–Ω–∞: {reason}**",
                        color=disnake.Color.red()
                    )
                    await owner.send(embed=embed_message)

        async def close_without_reason_callback(interaction):
            await interaction.response.send_message("**–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã?**",
                                                    ephemeral=True)

            confirm_button = disnake.ui.Button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", style=disnake.ButtonStyle.green)
            cancel_button = disnake.ui.Button(label="–û—Ç–º–µ–Ω–∞", style=disnake.ButtonStyle.red)

            async def confirm_callback(interaction):
                if ticket_channel.guild.get_channel(ticket_channel.id):
                    await ticket_channel.send("–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç.")
                await ticket_channel.delete()

                owner_id = ticket_owners.pop(ticket_channel.id, None)
                if owner_id:
                    user_tickets.pop(owner_id, None)

                user_tickets.pop(interaction.user.id, None)
                ticket_taken = False

            async def cancel_callback(interaction):
                await interaction.response.send_message("**–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.**", ephemeral=True)
                await confirmation_message.delete()

            confirm_button.callback = confirm_callback
            cancel_button.callback = cancel_callback

            view = disnake.ui.View(timeout=None)
            view.add_item(confirm_button)
            view.add_item(cancel_button)

            confirmation_message = await ticket_channel.send("**–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞:**", view=view)

        close_with_reason_button.callback = close_with_reason_callback
        close_without_reason_button.callback = close_without_reason_callback
        take_ticket_button.callback = take_ticket_callback

        view = disnake.ui.View(timeout=None)
        view.add_item(close_with_reason_button)
        view.add_item(close_without_reason_button)
        view.add_item(take_ticket_button)

        await ticket_channel.send(embed=disnake.Embed(
            title="**–í–∞—à —Ç–∏–∫–µ—Ç**",
            description=f"**–£ –í–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞–ø–∏—Å–∞—Ç—å –∂–∞–ª–æ–±—É/–≤–æ–ø—Ä–æ—Å.\n –í—ã –º–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è\n {interaction.user.mention}**",
            color=disnake.Color.red()
        ), view=view)
        ticket_number += 1

    ticket_button.callback = ticket_callback
    view = disnake.ui.View(timeout=None)
    view.add_item(ticket_button)

    await ctx.send(embed=embed, view=view)


bot.run("TOKEN")
